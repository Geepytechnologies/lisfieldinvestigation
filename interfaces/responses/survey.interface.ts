import { ISuccessResponse } from "./general.interface";

export interface ISurveyDetails {
  surveyPlanNumber: string;
  applicationCategoryId: number;
  applicationCategory: string;
  stepNumber: number;
  currentProcess: string;
  processingStatus: string;
  processingStatusDate: string;
  assignmentStatus: string;
  assignedOn: string;
  assignedTo: string;
  assigneeOfficer: string;
  investigationSchedule: string[];
  coordinateSystem: string;
  surveyTitle: string;
  landownerName: string;
  landSize: number;
  surveyDate: string;
  landStatus: string;
  address: string;
  landDescription: string;
  consentNumber: string;
  surconNumber: string;
  surveyor: string;
  surveyorAddress: string;
  referenceSurveyPlanId: string;
  tracingNumber: string;
  startingPoint: string;
  numberOfBeacons: number;
  applicationFeeTransId: string;
  applicationFee: number;
  applicationFeeTransDate: string;
  surveyPlanDocument: string;
  computationSheet: string;
  titleType: string;
  titleDocument: string;
  applicationStatus: string;
  applicationDate: string;
  appliedBy: string;
  applicantName: string;
  surveyPlanNumberValidity: string;
  surveyPlanNumberCorrectness: string;
  beaconNumberValidity: string;
  beaconNumberCorrectness: string;
  recordCopySubmitted: boolean;
  recordCopyUploadValidation: string;
  recordCopyUploadValidationRemark: string;
  computationSheetSubmitted: boolean;
  computationSheetUploadValidation: string;
  computationSheetUploadValidationRemark: string;
  surveyorValidation: string;
  nisPayment: boolean;
  uploadNisPayment: string;
  fileNumber: string;
  validationStatus: string;
  validationRemark: string;
  validatedBy: string;
  surveyDocumentValidator: string;
  validatedOn: string;
  cartSurveyTitle: string;
  cartNorthArrow: string;
  cartSurveyDate: string;
  cartSurveyPlanNumber: string;
  cartBeaconNumber: string;
  cartReferencePoint: string;
  cartScaleVerification: string;
  cartSegmentLabelling: string;
  cartSurveyorDetails: string;
  vetSurveyMisclosure: string;
  vetSurveyMisclosureValidity: string;
  vetLinearAccuracy: string;
  vetLinearAccuracyValidity: string;
  vetTransverseLegLengthValidity: string;
  vetCadastralOverlap: string;
  zoneId: string;
  cadastralZone: string;
  zoneClassId: number;
  zoneClass: string;
  computationSheetVerification: string;
  computationSheetVerificationRemark: string;
  vettingStatus: string;
  vettingRemark: string;
  vettedOn: string;
  vettedBy: string;
  vettingOfficer: string;
  beaconsFi: string[];
}

export type ISurveyTasksResponse = {
  data: ISurveyDetails[];
} & ISuccessResponse;

export type ILandInvestigationResponse = {
  data: boolean;
} & ISuccessResponse;
